"""
Django settings for Django02 project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-p*^x02wbshke&(p8-u+r4yv^%&(^@3#agrc&+n*(072)$b0&mt'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'blog',
    'TestModel',
    'app01',
    'cookie',
    'django_filters',
]

#REST_FRAMEWORK = {
 #   'DEFAULT_PERMISSION_CLASSES': (
 #       'rest_framework.permissions.IsAuthenticated',
#    )
#}
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES':[
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PAGINATION_CLASS':'rest_framework.pagination.PageNumberPagination',
    #'PAGE_SIZE':3
    #'DEFAULT_PAGINATION_CLASS':    'blog.pagination.MyPageNumberPagination',
    #'DEFAULT_PAGINATION_CLASS':   'rest_framework.pagination.LimitOffsetPagination',
    #'DEFAULT_PAGINATION_CLASS':   'rest_framework.pagination.CursorPagination',
   #'DEFAULT_PAGINATION_CLASS':  'blog.pagination.MyArticleCursorPagination',
    'PAGE_SIZE': 3,  # 默认每页显示的数据数量
    'MAX_PAGE_SIZE': 10,  # 最大允许的每页数据数量
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],

    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle',
        'rest_framework.throttling.ScopedRateThrottle',

    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '2/min',
        'user': '10/min',
        #'limit_per_minute': '5/min',  # 设置 'limit_per_minute' 范围的默认速率
        #'limit_per_hour': '500/hour',
        'article_list':'3/min', # 新增
        'article_detail': '100/hour', # 新增
    }

  #      (
   #     'rest_framework.authentication.BasicAuthentication',
   #     'rest_framework.authentication.SessionAuthentication',
   # )
}

AUTHENTICATION_BACKENDS = (
    'blog.views.MyCustomBackend',
)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
#    'app01.middlewares.MD1',
#    'app01.middlewares.MD2',
#    'app01.middlewares.MD3',
]

ROOT_URLCONF = 'Django02.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],

            "libraries":{                          # 添加这边三行配置
                'my_tags':'templatetags.my_tags'   # 添加这边三行配置
            }                                      # 添加这边三行配置


        },
    },
]

WSGI_APPLICATION = 'Django02.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'runoob', # 数据库名称
        'HOST': '210.49.68.97', # 数据库地址，本机 ip 地址 127.0.0.1
        'PORT': '3306', # 端口
        'USER': 'root',  # 数据库用户名
        'PASSWORD': 'Pass.crrc.2019', # 数据库密码
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATIC_URL = '/static/' # 别名
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "statics"),
]